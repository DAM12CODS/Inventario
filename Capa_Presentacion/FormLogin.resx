<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +a9uhdnz6eD1/T12eX0EAHAZrCBVLz8IX2Meuq1kmmqGPK5ZxTTwVskLtU1+Vll9BABwGdoFX8lvKpo/
        D11KOgcyLNUsZUhKKtG/VXNqeX6k2ia/kTVRBvICwEU434S1l59JV5ay/aqqy/JrP/g6JebsA4CL0H5G
        g1S/1NWa/GaobmZxTAoAbkvbVPTUeKmrZPnNVnlzGiYFALcl9sdYwapWfnLA2GB7VZWbwNjzVpf9CM/O
        Fa/7iHkkud8vT0wUsIJVrfzkgGsnUIxS+YM31qRGBAYZtX7Hk3UP6W/WtluV1lK1vVXOqvWF4mi7VaVY
        Zey1Yn3WSpqQ2crsPLpOUk3N2ypn1fbaa5+0b9Z2LaSM5JIB7HoB1/5pn/Q9JYtpH7fS39X3LPOrSULK
        Oee50j6ovNR+5DxXUs6xWN+zVEHbLLb0eKDrjJmapfLkidczKaHzsH/AJU1ya9XG9Td9Zn1Hqn0j1kNq
        lbe/TnrYraAkqa+xJiDpO/quVaaOdVumkpK8328lC+86SbVj/7xj2V/7/ec9lGNSuvap85CSyi818trf
        Skn3mfWM6Hzrmbe+s2r74pAi9YxIul9qnpNA+yw/K8hEYnq39Z27qOTNLWKX00ujTEo3tHUjp34/9TCd
        WZ7FKs8KLN7vl1/TB/quVab1+962rWThXSfpzKz51rHsr/3+8x5KXTvFsbWWeVb6ndwAnTrnZ+W9BMrA
        rO2lkvlPvZeu2heaDW1TxNPOe+++qdRDYWOX00tngn0JrU1Kyn3j22OVZZmEHm7vTdF/MfNR0LLK8u4R
        K7C3lMVRwNzXOHOxjuVKJqXrmaq510j3Tk7A72lSkmdUMhJr+9yY5T2fMq6a52NH27n80m9Y9870K3v7
        bD9M4Ei5N+RZepiUVGNUVjmWSQnvzTq13x7e8Xi/7ZmU/n5GazC2yAmYNUal392Xsz+H+pv2bb+/e+3L
        kWQI1rZbKXjqv3tyDGotX/u8SkHeq0msyjEq75yv+5ujo/3fn2uh4/Zewo6a03VM1vck734upH0wTF+I
        sUtQXEsljG8e1Q0+Au9BtB6eFX1mfWevUqOyyvAeLK/2owBSghcQUudfn+23l1rgNcfkmJRUalTWseyv
        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
</value>
  </data>
</root>