<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zSgi7QYltRnl3Pr7xx4eAOAY+r+h+19unTv4n5O6//xy5thnUFL7eM96X+MEAHAabIDaJz8IHzsulZJM
        U92Q2y2rkAZeOwblaft4Kdb7GScAgNPQL/hKflfRMZN6S6U6kGGpZSlDUlKJ/l8tp571I7V2+c1siTKR
        FwBOwv4uLKv0uJSoS9l+VrVl+fWffJ1T++RjAICu9F/RwB/vOV+X3xFqW1kckwKAy9I3Fd1PYZ6bpXZm
        1XenYVIAcFn6z2PykwPmBtuzqt4E5tab3xqGZ+aM191fyaYfZzxvuKP/6hN+csC5Eyhmqf7Bm2tS9eWr
        R0at43hK3UP6N7udVW0rVdvbfSwVXyi2touqxf4+pZptW6UFmVOZnVvXSap/6VrvY6nltVeZVDa7TS8p
        I9nv/VmjF3CVT2XS75QspjIupX/X2LPMr/Z+FCV1XiqVQfvLlaPkuZJy+4jY33hqoG8Wm5+KLuZmqp1R
        9ckTz2dSQvVgH3BJi9ymWuP6N/3Nbh/V+kash9TuS7LXSQ97KihJGmsseYgt+o1+a/cn6VyX+1RSknf8
        XkrhXScp/6z7eOdir739+wiVmJSufa4ectL+a4289Vg56T5LPSOqbz3zdvulUi+NKXLPiKT7peU5+RME
        e2f5pYJMoP8k4kdTyUNxz3ofIzXLpHRD25tYyh0/9zDt+TyL3ZeUCize8euv6Sf6rd2fd3xv215K4V0n
        ac+q+alzsdfe/n2EctdOcSy2MvdKxykN0Lk63yv7IhCRgdlto/ys7TXeS1frC82Cvinieeed2zI4m3IP
        RZr1PkZqT7CvwXsQbaBa4plEVP6+87H7kVImoYfbe1NMPfhbKGjZ/UjePZIK7D2VwrtOUbbFWUrqXOy1
        t38fIa+ut1ruLdK9UxLwt+p8rzyjkpHYbSWvjize8ynjSh2vkr5r+eXfsK6d6ZevG0v/aQJbKr0h9+I9
        iDZQLfEegqVajMruQ0qZlPDerHPl9vDOxzt2KrBL+vc9isE4hXedlmoxKh3X7sfWof5NZbPltbL7kWQI
        djsrBU/911JiUHH/KnOUgrzXklj+bsuovDqP5S3RVvltXYvcS1iqq3CJzsn+Jsq7nyvpHwzzF2LuJyjO
        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
</value>
  </data>
</root>